syntax = "proto3";

option java_outer_classname = "SharedStreetsSpeedsProto";

import "temporal_references.proto";

// SharedStreets uses histograms to store speed observations
// This allows aggregation and calculation of statistics from distribution of speeds
//
//   count
//    4 |       *
//    3 |     * *   * *
//    2 |   * * * * * * *
//    1 | * * * * * * * * * *
//       ________________________
//        0 1 2 3 4 5 6 7 8 9
//             Speed (km/h)
//
//   Mean and variance can be calculated from distribution.
//   Histograms with absolute counts can be added together to merge observations.
//   Histograms can also be stored using scaled counts (0-100 default) to hide absolute observation counts

message SpeedHistogram {
    uint32 periodOffset = 1;              // offset for period (Monday, midnight is zero for week cycle per ISO-8601)
    repeated uint32 speedBin = 2;         // repeated speed bins in km/h, bins are unordered and may not be sequential
    repeated uint32 observationCount = 3; // number of observations for corresponding speedBin. Counts are repeated in same order as bins.
}

// defines weekly speeds based on
message SharedStreetsWeeklySpeeds {

  string referenceId = 1; // SharedStreets Reference ID

  uint32 year = 2;     // date for Monday of week
  uint32 month = 3;
  uint32 day = 4;

  PeriodSize periodSize = 5;

  bool scaledCounts = 6; // counts in histogram are stored as scaled numbers (0-100), otherwise stored as absolute counts

  repeated SpeedHistogram speedsForPeriod = 7;
}
